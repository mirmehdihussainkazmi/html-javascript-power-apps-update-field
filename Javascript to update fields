// Declare a global object to store fetched data
var fetchedData = {};

// Function to be triggered on form load
function onLoad(executionContext) {
    console.log("onLoad function executed.");

    var formContext = executionContext.getFormContext();
    var recordId = formContext.data.entity.getId(); // Get record ID dynamically

    if (!recordId) {
        console.error("Error: Record ID not found.");
        return;
    }

    recordId = recordId.replace(/[{}]/g, ""); // Remove curly braces from Record ID

    console.log("Record ID:", recordId);

    fetchInvoiceData(recordId, formContext);
}

// Function to fetch invoice data from Dataverse API
function fetchInvoiceData(recordId, formContext) {
    console.log("Fetching data for Record ID:", recordId);

    // Ensure table name is correct in Dataverse
    var query = `https://orgeddc73a8.crm3.dynamics.com/api/data/v9.0/csts_invoices(${recordId})?$select=csts_customername,csts_invoice,csts_customeraddress,csts_duedate,csts_itemdescription,csts_quantity`;

    fetch(query, {
        method: "GET",
        headers: {
            "Accept": "application/json",
            "Content-Type": "application/json",
            "OData-Version": "4.0"
        }
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP Error! Status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        console.log("Data fetched successfully:", data);

        if (data) {
            // Store fetched data
            fetchedData = { 
                csts_customername: data.csts_customername || "",
                csts_invoice: data.csts_invoice || "",
                csts_customeraddress: data.csts_customeraddress || "",
                csts_duedate: data.csts_duedate || "",
                csts_itemdescription: data.csts_itemdescription || "",
                csts_quantity: data.csts_quantity || 0
            };
            console.log("Fetched data stored:", fetchedData);

            // Update fields in PowerApps form
            updateFields(formContext);
        } else {
            console.error("Error: Invalid data received from API.");
        }
    })
    .catch(error => {
        console.error("Error fetching data:", error);
    });
}

// Function to format date to yyyy-MM-dd
function formatDate(date) {
    const d = new Date(date);
    let month = '' + (d.getMonth() + 1);
    let day = '' + d.getDate();
    const year = d.getFullYear();

    if (month.length < 2) 
        month = '0' + month;
    if (day.length < 2) 
        day = '0' + day;

    return [year, month, day].join('-');
}

// Function to update fields in PowerApps form
function updateFields(formContext) {
    console.log("Updating fields with fetched data:", fetchedData);

    if (!fetchedData || Object.keys(fetchedData).length === 0) {
        console.error("Error: Missing data to update fields.");
        return;
    }

    // Set values in the form
    var customerNameField = formContext.getAttribute("csts_customername");
    var invoiceDetailsField = formContext.getAttribute("csts_invoice");
    var customerAddressField = formContext.getAttribute("csts_customeraddress");
    var dueDateField = formContext.getAttribute("csts_duedate");
    var itemDescriptionField = formContext.getAttribute("csts_itemdescription");
    var quantityField = formContext.getAttribute("csts_quantity");

    if (customerNameField) {
        customerNameField.setValue(fetchedData.csts_customername);
        customerNameField.fireOnChange();
        console.log("Customer Name updated:", fetchedData.csts_customername);
    } else {
        console.error("Error: Customer Name field not found.");
    }

    if (invoiceDetailsField) {
        invoiceDetailsField.setValue(fetchedData.csts_invoice);
        invoiceDetailsField.fireOnChange();
        console.log("Invoice updated:", fetchedData.csts_invoice);
    } else {
        console.error("Error: Invoice field not found.");
    }

    if (customerAddressField) {
        customerAddressField.setValue(fetchedData.csts_customeraddress);
        customerAddressField.fireOnChange();
        console.log("Customer Address updated:", fetchedData.csts_customeraddress);
    } else {
        console.error("Error: Customer Address field not found.");
    }

    if (dueDateField) {
        if (fetchedData.csts_duedate) {
            // Format the date to yyyy-MM-dd
            let formattedDate = formatDate(fetchedData.csts_duedate);
            dueDateField.setValue(formattedDate);
            dueDateField.fireOnChange();
            console.log("Due Date updated:", formattedDate);
        } else {
            console.error("Error: Due Date field has no value.");
        }
    } else {
        console.error("Error: Due Date field not found.");
    }

    if (itemDescriptionField) {
        itemDescriptionField.setValue(fetchedData.csts_itemdescription);
        itemDescriptionField.fireOnChange();
        console.log("Item Description updated:", fetchedData.csts_itemdescription);
    } else {
        console.error("Error: Item Description field not found.");
    }

    if (quantityField) {
        console.log("Quantity field before update:", fetchedData.csts_quantity);
        quantityField.setValue(fetchedData.csts_quantity);
        quantityField.fireOnChange();
        console.log("Quantity updated:", fetchedData.csts_quantity);
    } else {
        console.error("Error: Quantity field not found.");
    }
}

// Register `onLoad` globally so PowerApps can find it
window.onLoad = onLoad;
